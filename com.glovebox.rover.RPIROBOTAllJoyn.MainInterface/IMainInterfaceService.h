//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace com { namespace glovebox { namespace rover { namespace RPIROBOTAllJoyn { namespace MainInterface {

public interface class IMainInterfaceService
{
public:
    // Implement this function to handle calls to the Autonomous method.
    Windows::Foundation::IAsyncOperation<MainInterfaceAutonomousResult^>^ AutonomousAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info );

    // Implement this function to handle calls to the Backward method.
    Windows::Foundation::IAsyncOperation<MainInterfaceBackwardResult^>^ BackwardAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info );

    // Implement this function to handle calls to the Forward method.
    Windows::Foundation::IAsyncOperation<MainInterfaceForwardResult^>^ ForwardAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info );

    // Implement this function to handle calls to the Left method.
    Windows::Foundation::IAsyncOperation<MainInterfaceLeftResult^>^ LeftAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info );

    // Implement this function to handle calls to the Manual method.
    Windows::Foundation::IAsyncOperation<MainInterfaceManualResult^>^ ManualAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info );

    // Implement this function to handle calls to the Right method.
    Windows::Foundation::IAsyncOperation<MainInterfaceRightResult^>^ RightAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info );

    // Implement this function to handle calls to the Stop method.
    Windows::Foundation::IAsyncOperation<MainInterfaceStopResult^>^ StopAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info );

};

} } } } } 
